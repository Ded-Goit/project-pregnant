import { NextRequest, NextResponse } from 'next/server';
import { api } from '../../api'; // –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —à–ª—è—Ö –¥–æ api –∫–æ—Ä–µ–∫—Ç–Ω–∏–π
import { cookies } from 'next/headers';
import { AxiosError } from 'axios';

export async function PATCH(
  request: NextRequest,
  { params }: { params: { taskId: string } }
) {
  const body = await request.json(); // –û—Ç—Ä–∏–º—É—î–º–æ { isDone: boolean }
  const cookieData = await cookies();
  const accessToken = cookieData.get('accessToken')?.value;
  const { taskId } = params; // ID –∑–∞–≤–¥–∞–Ω–Ω—è

  try {
    // üí° –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –∑–æ–≤–Ω—ñ—à–Ω—ñ–π –±–µ–∫–µ–Ω–¥
    const response = await api.patch(`/tasks/${taskId}/status`, body, {
      headers: { Authorization: ` Bearer ${accessToken}` },
    });

    const { data } = response;

    return NextResponse.json(data);
  } catch (error) {
    const err = error as AxiosError;

    if (err.response) {
      return NextResponse.json(err.response.data, {
        status: err.response.status,
      });
    }
    return NextResponse.json({ message: '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫' }, { status: 500 });
  }
}
